<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="4_interface_segregation_principle_8cpp" kind="file">
    <compoundname>4InterfaceSegregationPrinciple.cpp</compoundname>
    <includes refid="4_interface_segregation_principle_2stdafx_8h" local="yes">stdafx.h</includes>
    <includes local="no">iostream</includes>
    <includes local="no">vector</includes>
    <incdepgraph>
      <node id="187">
        <label>SDKDDKVer.h</label>
      </node>
      <node id="185">
        <label>stdafx.h</label>
        <link refid="4_interface_segregation_principle_2stdafx_8h"/>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="188" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
      </node>
      <node id="186">
        <label>targetver.h</label>
        <link refid="4_interface_segregation_principle_2targetver_8h"/>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>C:/shared/Courses/modernCppDesign/ModernC++Design/4InterfaceSegregationPrinciple/4InterfaceSegregationPrinciple.cpp</label>
        <link refid="4InterfaceSegregationPrinciple.cpp"/>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>vector</label>
      </node>
      <node id="190">
        <label>iostream</label>
      </node>
      <node id="189">
        <label>tchar.h</label>
      </node>
      <node id="188">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_i_printer" prot="public">IPrinter</innerclass>
    <innerclass refid="struct_i_scanner" prot="public">IScanner</innerclass>
    <innerclass refid="struct_i_fax" prot="public">IFax</innerclass>
    <innerclass refid="struct_printer" prot="public">Printer</innerclass>
    <innerclass refid="struct_scanner" prot="public">Scanner</innerclass>
    <innerclass refid="struct_fax" prot="public">Fax</innerclass>
    <innerclass refid="struct_i_machine" prot="public">IMachine</innerclass>
    <innerclass refid="struct_machine" prot="public">Machine</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>4InterfaceSegregationPrinciple.cpp<sp/>:<sp/>Defines<sp/>the<sp/>entry<sp/>point<sp/>for<sp/>the<sp/>console<sp/>application.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="4_interface_segregation_principle_2stdafx_8h" kindref="compound">stdafx.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//0.<sp/>The<sp/>idea<sp/>of<sp/>the<sp/>interface<sp/>segregation<sp/>principle<sp/>is<sp/>basically<sp/>to<sp/>get<sp/>you<sp/>to<sp/>not<sp/>create<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>which<sp/>are<sp/>too<sp/>large<sp/>and<sp/>which<sp/>require<sp/>implementors<sp/>to<sp/>maybe<sp/>implement<sp/>too<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//1.<sp/>Imagine<sp/>that<sp/>you<sp/>want<sp/>to<sp/>an<sp/>interface<sp/>for<sp/>scanning,<sp/>printing<sp/>and<sp/>faxing<sp/>documents,<sp/>so<sp/>you<sp/>could</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>tempted<sp/>to<sp/>just<sp/>put<sp/>all<sp/>of<sp/>those<sp/>operations<sp/>into<sp/>a<sp/>single<sp/>interface<sp/>in<sp/>something<sp/>called<sp/>machine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Document;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//1.1<sp/>Interace<sp/>of<sp/>Machine,<sp/>which<sp/>is<sp/>too<sp/>large<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>IMachine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>virtual<sp/>void<sp/>print(Document&amp;<sp/>doc)<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>virtual<sp/>void<sp/>fax(Document&amp;<sp/>doc)<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>virtual<sp/>void<sp/>scan(Document&amp;<sp/>doc)<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MultiFunctionPrinter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>MFP<sp/>:<sp/>IMachine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>void<sp/>print(Document&amp;<sp/>doc)<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>void<sp/>fax(Document&amp;<sp/>doc)<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>void<sp/>scan(Document&amp;<sp/>doc)<sp/>override;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//2.0<sp/>Theh<sp/>problem<sp/>that<sp/>you<sp/>typically<sp/>encounter<sp/>is<sp/>,<sp/>what<sp/>happens<sp/>if<sp/>you<sp/>need<sp/>to<sp/>implement<sp/>just<sp/>a<sp/>printer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>just<sp/>a<sp/>scanner,<sp/>because<sp/>you<sp/>only<sp/>have<sp/>this<sp/>machine<sp/>interface<sp/>to<sp/>work<sp/>with.<sp/>If<sp/>we<sp/>put<sp/>all<sp/>the<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>together<sp/>you<sp/>are<sp/>sending<sp/>the<sp/>client<sp/>the<sp/>message<sp/>that<sp/>you&apos;ve<sp/>got<sp/>the<sp/>scanner<sp/>which<sp/>can<sp/>also<sp/>print,<sp/>which<sp/>isn&apos;t<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>you<sp/>are<sp/>giving<sp/>them<sp/>the<sp/>API<sp/>anyway<sp/>simply<sp/>because<sp/>the<sp/>interface<sp/>that&apos;s<sp/>been<sp/>defined<sp/>for<sp/>handling<sp/>all<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">//stuff<sp/>is<sp/>just<sp/>too<sp/>big.<sp/>What<sp/>we<sp/>really<sp/>need<sp/>is<sp/>to<sp/>segregate<sp/>the<sp/>interfaces<sp/>because<sp/>no<sp/>client<sp/>would</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>require<sp/>always<sp/>to<sp/>implement<sp/>both<sp/>print,scan<sp/>and<sp/>fax<sp/>as<sp/>well.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//2.1<sp/>Instead<sp/>of<sp/>a<sp/>large<sp/>interface,<sp/>you<sp/>would<sp/>prefer<sp/>the<sp/>following<sp/>approach,<sp/>segregating<sp/>the<sp/>interfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1.<sp/>Recompile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>2.<sp/>Client<sp/>does<sp/>not<sp/>need<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>3.<sp/>Forcing<sp/>implementors<sp/>to<sp/>implement<sp/>too<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_i_printer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_i_printer" kindref="compound">IPrinter</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(Document&amp;<sp/>doc)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="struct_i_scanner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_i_scanner" kindref="compound">IScanner</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scan(Document&amp;<sp/>doc)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="struct_i_fax" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_i_fax" kindref="compound">IFax</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fax(Document&amp;<sp/>doc)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_printer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_printer" kindref="compound">Printer</ref><sp/>:<sp/><ref refid="struct_i_printer" kindref="compound">IPrinter</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>print(Document&amp;<sp/>doc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="struct_scanner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_scanner" kindref="compound">Scanner</ref><sp/>:<sp/><ref refid="struct_i_scanner" kindref="compound">IScanner</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scan(Document&amp;<sp/>doc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">};</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="struct_fax" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_fax" kindref="compound">Fax</ref><sp/>:<sp/><ref refid="struct_i_fax" kindref="compound">IFax</ref></highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fax(Document&amp;<sp/>doc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//2.3<sp/>Here<sp/>we<sp/>define<sp/>the<sp/>segregated<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="struct_i_machine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_i_machine" kindref="compound">IMachine</ref><sp/>:<sp/><ref refid="struct_i_printer" kindref="compound">IPrinter</ref>,<sp/><ref refid="struct_i_scanner" kindref="compound">IScanner</ref>,<sp/><ref refid="struct_i_fax" kindref="compound">IFax</ref><sp/>{<sp/>};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//3.0<sp/>Decorator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="struct_machine" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_machine" kindref="compound">Machine</ref><sp/>:<sp/><ref refid="struct_i_machine" kindref="compound">IMachine</ref></highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84" refid="struct_machine_1a7871626c324dfc701a4a675a400eafd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_printer" kindref="compound">IPrinter</ref>&amp;<sp/><ref refid="struct_machine_1a7871626c324dfc701a4a675a400eafd4" kindref="member">printer</ref>;</highlight></codeline>
<codeline lineno="85" refid="struct_machine_1ad71479cee83da012ff03cfa84d14ba21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_scanner" kindref="compound">IScanner</ref>&amp;<sp/><ref refid="struct_machine_1ad71479cee83da012ff03cfa84d14ba21" kindref="member">scanner</ref>;</highlight></codeline>
<codeline lineno="86" refid="struct_machine_1a5907959504774d06be573e1fcfc7c4bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_i_fax" kindref="compound">IFax</ref>&amp;<sp/><ref refid="struct_machine_1a5907959504774d06be573e1fcfc7c4bb" kindref="member">fax</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="struct_machine_1afba7a0b1256214b0fcc7e40e3a6e38cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_machine_1afba7a0b1256214b0fcc7e40e3a6e38cd" kindref="member">Machine</ref>(<ref refid="struct_i_printer" kindref="compound">IPrinter</ref>&amp;<sp/>printer,<sp/><ref refid="struct_i_scanner" kindref="compound">IScanner</ref>&amp;<sp/>scanner,<sp/><ref refid="struct_i_fax" kindref="compound">IFax</ref>&amp;<sp/>fax)<sp/>:</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer{<sp/>printer<sp/>},</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scanner{<sp/>scanner<sp/>},</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fax{<sp/>fax<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="struct_machine_1ab2c85011d244d1888188f9030e087a59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_machine_1ab2c85011d244d1888188f9030e087a59" kindref="member">print</ref>(Document&amp;<sp/>doc)</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printer.print(doc);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>scan(Document&amp;<sp/>doc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fax(Document&amp;<sp/>doc)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="C:/shared/Courses/modernCppDesign/ModernC++Design/4InterfaceSegregationPrinciple/4InterfaceSegregationPrinciple.cpp"/>
  </compounddef>
</doxygen>
